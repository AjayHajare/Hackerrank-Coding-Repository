Two strings, a and b , are called anagrams if they contain all the same characters in the same frequencies. For this challenge, the test is not case-sensitive. 
For example, the anagrams of CAT are CAT, ACT, tac, TCA, aTC, and CtA.

Function Description:
Complete the isAnagram function in the editor.
isAnagram has the following parameters:
string a: the first string
string b: the second string

Returns
boolean: If  a and b  are case-insensitive anagrams, return true. Otherwise, return false.

Input Format
The first line contains a string .
The second line contains a string .

Constraints:
Strings  and  consist of English alphabetic characters.
The comparison should NOT be case sensitive.

Sample Input 0:
anagram
margana

Sample Output 0:
Anagrams

Sample Input 1:
anagramm
marganaa

Sample Output 1:
Not Anagrams

******************************************************************************************

import java.util.Scanner;

public class Solution {
    static boolean isAnagram(String a, String b) {
        boolean isAna = true;
        if(a.length()!= b.length())
            return false;
        
        char[] array1 = new char[a.length()];
        char[] array2 = new char[b.length()];
        
        array1 = a.toLowerCase().toCharArray();
        array2 = b.toLowerCase().toCharArray();
        java.util.Arrays.sort(array1);
        java.util.Arrays.sort(array2);
        
        isAna = java.util.Arrays.equals(array1, array2);
        
        return isAna;
    }
    public static void main(String[] args) {
    
        Scanner scan = new Scanner(System.in);
        String a = scan.next();
        String b = scan.next();
        scan.close();
        boolean ret = isAnagram(a, b);
        System.out.println( (ret) ? "Anagrams" : "Not Anagrams" );
    }
}


