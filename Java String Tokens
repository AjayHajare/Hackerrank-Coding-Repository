Given a string,s, matching the regular expression [A-Za-z !,?._'@]+, split the string into tokens. We define a token to be one or more consecutive English alphabetic letters. 
Then, print the number of tokens, followed by each token on a new line.

Input Format:
A single string, .

Constraints:
s is composed of any of the following: English alphabetic letters, blank spaces, exclamation points (!), commas (,), question marks (?), periods (.), underscores (_), 
apostrophes ('), and at symbols (@).

Output Format:
On the first line, print an integer, , denoting the number of tokens in string  (they do not need to be unique). 
Next, print each of the  tokens on a new line in the same order as they appear in input string .

Sample Input:
He is a very very good boy, isn't he?

Sample Output:
10
He
is
a
very
very
good
boy
isn
t
he

Explanation:
We consider a token to be a contiguous segment of alphabetic characters. There are a total of  10 tokens in string , and each token is printed in the same order 
in which it appears in string .

***********************************************************************************************************


import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String s = scan.nextLine();
        
        s = s.trim();    //checks whitespaces before and after the string, if it exists then removes the spaces and returns the omitted string.
        if(s.length()==0)
            System.out.println(0);
        else{
            String[] ans = s.split("[!,?._'@ ]+");
            System.out.println(ans.length);       //To print number of tokens
            for(String w:ans)                     //To print each word from string array
                System.out.println(w);
        }
               
        scan.close();
    }
}
