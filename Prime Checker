You are given a class Solution and its main method in the editor. Your task is to create a class Prime. The class Prime should contain a single method checkPrime.
The locked code in the editor will call the checkPrime method with one or more integer arguments. You should write the checkPrime method in such a way that 
the code prints only the prime numbers. Please read the code given in the editor carefully. Also please do not use method overloading!

Note: You may get a compile time error in this problem due to the statement below:
  BufferedReader br=new BufferedReader(new InputStreamReader(in));
This was added intentionally, and you have to figure out a way to get rid of the error.

Input Format:
There are only five lines of input, each containing one integer.

Output Format:
There will be only four lines of output. Each line contains only prime numbers depending upon the parameters passed to checkPrime in the 
main method of the class Solution. In case there is no prime number, then a blank line should be printed.

Sample Input:
2
1
3
4
5

Sample Output:
2 
2 
2 3 
2 3 5

*****************************************************************************************************************************************************************

import java.io.*;
import java.util.*;
import static java.lang.System.in;

class Prime{
    
    public void checkPrime(int... nums){                      // Made use of Java "varargs" as number of input arguments is not known
         
        for(int x: nums){                                     // foreach int from input check for prime
            if(isPrime(x))
                System.out.print(x +" ");
        }
        System.out.println();                                 // Nextline for required format of output
    }
    
    boolean isPrime(int x){
        if(x==2)                                            // '2' is only even prime number
            return true;
        if(x<2 || x%2==0)                                   // if number is less than '2' OR number is even then return 'false'
            return false;
        
        for(int i=2; i<=Math.sqrt(x); i++){                 // loop from '2' to 'sqrt(num)', if any number from range divides given 'num' return 'false'
                if(x%i == 0){
                    return false;
                }
        }
        
        return true;                                     //The idea is to see if our number n is divisible by any numbers (not including 1 and n). If it's divisible by any such 
							 // numbers, it is not prime, and we return false. If it's not divisible by any of these numbers, we come out of the 
							 // for loop, and return true since our number is prime.
    }
}

public class Solution {

	public static void main(String[] args) {
		
		BufferedReader br=new BufferedReader(new InputStreamReader(in));
		int n1=Integer.parseInt(br.readLine());
		int n2=Integer.parseInt(br.readLine());
		int n3=Integer.parseInt(br.readLine());
		int n4=Integer.parseInt(br.readLine());
		int n5=Integer.parseInt(br.readLine());
		Prime ob=new Prime();
		ob.checkPrime(n1);
		ob.checkPrime(n1,n2);
		ob.checkPrime(n1,n2,n3);
		ob.checkPrime(n1,n2,n3,n4,n5);
  
  }
}
